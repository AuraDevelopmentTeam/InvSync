name: Code Checks

on: [push, pull_request_target]

env:
  GRADLE_OPTS: >-
    -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false
  GRADLE_CMD_OPTS: >-
    --continue
    --no-build-cache
    --no-daemon
    --parallel

jobs:
  spotless:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: 8
          java-package: jdk
          architecture: x64
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - uses: burrunan/gradle-cache-action@v1
        name: Check code formatting
        with:
          # Properties are passed as -Pname=value
          properties: |
            branchName=${{ github.ref }}
          # Arguments for Gradle execution
          arguments: ${{ env.GRADLE_CMD_OPTS }} spotlessCheck
          # Enable concurrent cache save and restore (it's faster)
          concurrent: true
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: 8
          java-package: jdk
          architecture: x64
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - uses: burrunan/gradle-cache-action@v1
        name: Build all files
        with:
          # Properties are passed as -Pname=value
          properties: |
            branchName=${{ github.ref }}
          # Arguments for Gradle execution
          arguments: ${{ env.GRADLE_CMD_OPTS }} assemble compileTest
          # Enable concurrent cache save and restore (it's faster)
          concurrent: true
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    needs: [build]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: 8
          java-package: jdk
          architecture: x64
      - name: Checkout submodules
        run: git submodule update --init --recursive
      # This is to ensure unit tests with MariaDB4j don't fail
      - name: Symlinks for MacOS
        if: ${{ runner.os == 'MacOS' }}
        run: |
          sudo ln -s /usr/lib/libssl.dylib /usr/local/opt/openssl/lib/libssl.1.0.0.dylib
          sudo ln -s /usr/lib/libcrypto.dylib /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib
      - uses: burrunan/gradle-cache-action@v1
        name: Run all Tests
        with:
          # Properties are passed as -Pname=value
          properties: |
            branchName=${{ github.ref }}
          # Arguments for Gradle execution
          arguments: ${{ env.GRADLE_CMD_OPTS }} -x spotlessCheck build
          # Enable concurrent cache save and restore (it's faster)
          concurrent: true
      - name: Publish JUnit Test Reports
        if: success() || failure()
        uses: mikepenz/action-junit-report@v1
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          github_token: ${{ github.token }}
          check_name: 'JUnit Test Report (OS: ${{ matrix.os }})'
      - name: Publish SpotBugs Reports
        if: success() || failure()
        uses: jwgmeligmeyling/spotbugs-github-action@v1.2
        with:
          path: '**/build/reports/spotbugs/*.xml'
          token: ${{ github.token }}
          name: 'SpotBugs Report (OS: ${{ matrix.os }})'
